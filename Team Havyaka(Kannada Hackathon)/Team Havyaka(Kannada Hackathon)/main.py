# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\u1.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from   PyQt5.QtWidgets import *
from   PyQt5.QtGui     import *
from   PyQt5.QtCore    import *
from PyQt5.QtMultimedia import *

import random
import wikipedia


import speech_recognition as sr
import time
# import pyaudio
from translate import Translator


from gtts import gTTS
import os


s="ಹಲೋ, ಭಾಷೆಯನ್ನು ಆಯ್ಕೆ ಮಾಡಲು ಬಟನ್ ಕ್ಲಿಕ್ ಮಾಡಿ?\n"
a="KANNADA"
o="KANNADA"

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1150, 720)
        MainWindow.setStyleSheet("#centralwidget{background-color:black;}\n"
        ".QLabel{color:White;}\n"
        "#pushButton{background-color:rgba(0, 175, 250, 1);border-radius:30}\n"
        "\n"
        "#pushButton:hover{background-color:rgba(0, 175, 250, 0.5);border-radius:30}\n"
        "\n"
        "#pushButton_2{background-color:rgba(0, 175, 250, 1);border-radius:20;}\n"
        "\n"
        "#pushButton_2:hover{background-color:rgba(0, 175, 250, 0.5);border-radius:30}\n"
        "\n"
        "#pushButton_3{background-color:rgba(0, 175, 250, 1);border-radius:20;}\n"
        "\n"
        "#pushButton_3:hover{background-color:rgba(0, 175, 250, 0.5);border-radius:30}\n"
        "\n"
        ".QComboBox{border-radius:10}\n"
        "\n"
        ".QTextEdit{background-color:rgba(0, 0, 255, 0.3);color:white;}\n"
        "\n"
        ".comboBox{color:red}")
        MainWindow.setIconSize(QtCore.QSize(50, 50))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        
        
        #=------background gif---
        self.label2 = QtWidgets.QLabel(self.centralwidget)
        self.label2.setGeometry(QtCore.QRect(0, -230, 0, 0))
        self.label2.setMinimumSize(QtCore.QSize(1280,1280))
        self.label2.setMaximumSize(QtCore.QSize(1280,1280))
        self.label2.setObjectName("label2")
        
        MainWindow.setCentralWidget(self.centralwidget)
        

        # self.movie1 = QMovie("wallpaper2.gif")
        # self.movie1.setScaledSize(QSize().scaled(1100,1100, Qt.KeepAspectRatio))
        # self.label2.setMovie(self.movie1)
        # self.movie1.start()
        #=---------
        
        
        
        
        
        
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(490, 580, 121, 101))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/feather/mic.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton.setIcon(icon)
        self.pushButton.setIconSize(QtCore.QSize(60, 60))
        self.pushButton.setObjectName("pushButton")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(460, 20, 211, 71))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(40, 110, 1041, 441))
        self.textEdit.setObjectName("textEdit")
        self.textEdit.setFont(font)
        
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(150, 580, 181, 101))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setIcon(icon)
        self.pushButton_2.setIconSize(QtCore.QSize(40, 40))
        self.pushButton_2.setObjectName("pushButton_2")
                
                
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(760, 580, 181, 101))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setIcon(icon)
        self.pushButton_3.setIconSize(QtCore.QSize(40, 40))
        self.pushButton_3.setObjectName("pushButton_3")
        
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1145, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        # self.statusbar = QtWidgets.QStatusBar(MainWindow)
        # self.statusbar.setObjectName("statusbar")
        # MainWindow.setStatusBar(self.statusbar)
        
        
        
        #=---------GIF robot:
        self.label1 = QtWidgets.QLabel(self.centralwidget)
        self.label1.setGeometry(QtCore.QRect(970, 50, 0, 0))
        self.label1.setMinimumSize(QtCore.QSize(170, 170))
        self.label1.setMaximumSize(QtCore.QSize(170, 170))
        self.label1.setObjectName("label")
        
        MainWindow.setCentralWidget(self.centralwidget)
        

        self.movie2 = QMovie("robot1.gif")
        self.movie2.setScaledSize(QSize().scaled(150, 150, Qt.KeepAspectRatio))
        self.label1.setMovie(self.movie2)
        self.movie2.start()
        #=---------
        
        
        
        

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        global s
        
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "REC"))
        self.pushButton_2.setText(_translate("MainWindow", "Input language"))
        self.pushButton_3.setText(_translate("MainWindow", "Output language"))
        self.label.setText(_translate("MainWindow", "ಸ್ವಾಗತ"))
        self.textEdit.setText(s)
        
        self.pushButton.clicked.connect(self.record)
        self.pushButton_2.clicked.connect(self.chooseinplang)
        self.pushButton_3.clicked.connect(self.chooseoutlang)


    def chooseinplang(self):    
        
        global s
        global a
        r = sr.Recognizer()

        print("\nStart speaking:\n")

        start=time.time()
        with sr.Microphone() as source:
                # read the audio data from the default microphone
                audio_data = r.record(source, duration=3)
                print("Recognizing...:")
                # convert speech to langtext
                
                try:
                    langtext = r.recognize_google(audio_data,language='en-in')
                    print("You said:",langtext)
                    
                    s=s+"\nನಿಮ್ಮ ಇನ್ ಪುಟ್ ಭಾಷೆಯಾಗಿ ನೀವು "+langtext+" ಆಯ್ಕೆ ಮಾಡಿದ್ದೀರಿ"
                    self.textEdit.setText(s)
                    a=langtext
                except:
                    s=s+"\nಕ್ಷಮಿಸಿ, ನೀವು ಪುನರಾವರ್ತಿಸಬಹುದೇ?"
                    self.textEdit.setText(s)
                    print("ಕ್ಷಮಿಸಿ ನಿಮ್ಮ ಧ್ವನಿಯನ್ನು ಕೇಳಲು ಸಾಧ್ಯವಾಗಲಿಲ್ಲ.")
                    
                    
    def chooseoutlang(self):    
        
        global s
        global o
        r = sr.Recognizer()

        print("\nStart speaking:\n")

        start=time.time()
        with sr.Microphone() as source:
                # read the audio data from the default microphone
                audio_data = r.record(source, duration=3)
                print("Recognizing...:")
                # convert speech to langtext
                
                try:
                    langtext = r.recognize_google(audio_data,language='en-in')
                    print("You said:",langtext)
                    
                    s=s+"\nನಿಮ್ಮ ಔಟ್ ಪುಟ್ ಭಾಷೆಯಾಗಿ ನೀವು "+langtext+" ಆಯ್ಕೆ ಮಾಡಿದ್ದೀರಿ"
                    self.textEdit.setText(s)
                    o=langtext
                except:
                    s=s+"\nಕ್ಷಮಿಸಿ, ನೀವು ಪುನರಾವರ್ತಿಸಬಹುದೇ?"
                    self.textEdit.setText(s)
                    print("ಕ್ಷಮಿಸಿ ನಿಮ್ಮ ಧ್ವನಿಯನ್ನು ಕೇಳಲು ಸಾಧ್ಯವಾಗಲಿಲ್ಲ.")               
                    
                    
    def record(self):
        global s
        global a
        global o
                
        if(os.path.exists('hello.mp3')):
            os.remove('hello.mp3')

        
        a=a.upper()
        o=o.upper()
        
        self.textEdit.setText(s)
        
        
        self.label1.setGeometry(QtCore.QRect(955, 35, 0, 0))

        n=random.randint(2,4)
        
        # self.movie2 = QMovie("robot"+str(n)+".gif")
        # self.movie2.setScaledSize(QSize().scaled(190, 190, Qt.KeepAspectRatio))
        # self.label1.setMovie(self.movie2)
        # self.movie2.start()
        

        langtext=""
        lan={'ASSAMESE':'as-IN',
                'BENGALI':'bn-IN',
                'BODO':'brx-IN',
                'DOGRI':'doi-IN',
                'GUJARATI':'gu-IN',
                'HINDI':'hi-IN',
                'KANNADA':'kn-IN',
                'KASHMIRI':'ks-IN',
                'KONKANI':'gom-IN',
                'MAITHILI':'mai-IN',
                'MALAYALAM':'ml-IN',
                'MANIPURI':'mni-IN',
                'MARATHI':'mr-IN',
                'NEPALI':'ne-IN',
                'ORIYA':'or-IN',
                'PUNJABI':'pa-IN',
                'SANSKRIT':'sa-IN',
                'SANTALI':'sat-IN',
                'SINDHI':'sd-IN',
                'TAMIL':'ta-IN',
                'TELEGU':'te-IN',
                'URDU':'ur-IN',
                'ENGLISH':'en-IN'}
            
            
            # user_input=input("enter the language you are going to speak in: ")
            # a=user_input.upper()
            
            #a=input("SELECT LANGUAGE: ")
            # if(a not in lan.keys()):
            #     print("sorry not available")
            # else:
        r = sr.Recognizer()

                # Reading Microphone as source
                # listening the speech and store in audio_langtext variable
        print("\nStart speaking:\n")

        start=time.time()
        with sr.Microphone() as source:
                # read the audio data from the default microphone
                audio_data = r.record(source, duration=5)
                print("Recognizing...:")
                # convert speech to langtext
                
                try:
                    langtext = r.recognize_google(audio_data,language=lan[a])
                    print("You said:",langtext)
                    
                    s=s+"\nIn "+a+":"+langtext
                    self.textEdit.setText(s)
                        
                except:
                    s=s+"\nಕ್ಷಮಿಸಿ, ನೀವು ಪುನರಾವರ್ತಿಸಬಹುದೇ?"
                    self.textEdit.setText(s)
                    print("ಕ್ಷಮಿಸಿ ನಿಮ್ಮ ಧ್ವನಿಯನ್ನು ಕೇಳಲು ಸಾಧ್ಯವಾಗಲಿಲ್ಲ.")
                    
                    
            #TRANSLATION:--------------------------------


        dict={'ASSAMESE':'as',
            'BENGALI':'bn',
            'HINDI':'hi',
            'KANNADA':'kn',
            'MALAYALAM':'ml',
            'MARATHI':'mr',
            'SANSKRIT':'sa',
            'TAMIL':'ta',
            'TELEGU':'te',
            'URDU':'ur',
            'ENGLISH':'en'}

        for i in dict:
                    if i in dict:
                        # user_input=input("enter the language you are going to speak in: ")
                        # capital=user_input.upper()


                        translator= Translator(from_lang=dict[a],to_lang=dict[o])
                
                        # langtext=input("Enter your langtext in your language: ")
                        translation = translator.translate(langtext)
                        print("The translated langtext is:",translation)
                        
                        
                        s=s+"\nIn "+o+":"+translation
                        self.textEdit.setText(s)
                        
                        dic={'ASSAMESE':'as',
                                'BENGALI':'bn',
                                'HINDI':'hi',
                                'KANNADA':'kn',
                                'MALAYALAM':'ml',
                                'MARATHI':'mr',
                                'SANSKRIT':'sa',
                                'TAMIL':'ta',
                                'TELEGU':'te',
                                'URDU':'ur',
                                'ENGLISH':'en'}

                        tts = gTTS(translation, lang='en',tld='co.in', slow=False )
                        tts.save('hello.mp3')


                        full_file_path = os.path.join(os.getcwd(), 'hello.mp3')
                        url = QUrl.fromLocalFile(full_file_path)
                        content = QMediaContent(url)

                        self.player = QMediaPlayer()
                        self.player.setMedia(content)
                        self.player.play()
                        
                        break
                    else:
                        print("ದಯವಿಟ್ಟು ಬೇರೆ ಭಾಷೆಯಲ್ಲಿ ಮಾತನಾಡಿ.")
                        continue
        
                
# import resource_rc




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
